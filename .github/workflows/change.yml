name: Main Checks
on:
  - push
  - pull_request
jobs:
  get:
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.setvar.outputs.result }}
    env:
      prefix: registry.gitlab.com/kwinft/ci-images/archlinux/kf
      result: ''
      branch: ''
    steps:
      - run: echo "branch=${{ github.head_ref || github.ref_name }}" >> $GITHUB_ENV
      - run: echo "result=${{ env.prefix }}-master" >> $GITHUB_ENV
      - if: startsWith(env.branch, '0.') || github.ref_type == 'tag'
        run: echo "result=${{ env.prefix }}-stable" >> $GITHUB_ENV
      - id: setvar
        run: echo "result=${{ env.result }}" >> $GITHUB_OUTPUT

  message-lint:
    uses: ./.github/workflows/commit-lint.yml
    with:
      upstream-repo: https://github.com/winft/wrapland.git

  clang-format:
    uses: ./.github/workflows/clang-format.yml

  build:
    uses: ./.github/workflows/build.yml
    needs: get
    with:
      image: ${{ needs.get.outputs.image }}

  build-sanitized:
    uses: ./.github/workflows/build.yml
    needs: get
    with:
      image: ${{ needs.get.outputs.image }}
      is-sanitized: true
      artifact-name: build-sanitized

  install:
    uses: ./.github/workflows/install.yml
    needs: [build, get]
    with:
      image: ${{ needs.get.outputs.image }}

  test:
    uses: ./.github/workflows/test.yml
    needs:
      - build
      - get
    with:
      image: ${{ needs.get.outputs.image }}

  test-sanitized:
    uses: ./.github/workflows/test.yml
    needs: [build-sanitized, get]
    with:
      image: ${{ needs.get.outputs.image }}
      artifact-name: build-sanitized

  clang-tidy:
    name: Clang-Tidy
    runs-on: ubuntu-latest
    needs: [build, get]
    container:
      image: ${{ needs.get.outputs.image }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: build
      - name: Untar artifact
        run: tar -xzf build-dir.tar
      - name: Run Clang-Tidy
        run: bash tooling/analysis/clang-tidy.sh build

  package:
    uses: ./.github/workflows/package.yml
    needs: [build, get]
    with:
      image: ${{ needs.get.outputs.image }}
      package-name: wrapland
